{"remainingRequest":"C:\\Users\\jungk\\Desktop\\vuex-project-for-share (1)\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\jungk\\Desktop\\vuex-project-for-share (1)\\src\\store.js","dependencies":[{"path":"C:\\Users\\jungk\\Desktop\\vuex-project-for-share (1)\\src\\store.js","mtime":1574871301282},{"path":"C:\\Users\\jungk\\Desktop\\vuex-project-for-share (1)\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jungk\\Desktop\\vuex-project-for-share (1)\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport Vue from 'vue';\nimport Vuex from 'vuex'; // vuex 크레에이트시 기본으로 있는 파일\n\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    // data의 역할\n    allUsers: [{\n      userId: 'hoza123',\n      password: '123',\n      name: '연희',\n      address: 'Seoul',\n      src: 'https://goo.gl/oqLfJR'\n    }, {\n      userId: 'max123',\n      password: '456',\n      name: '이기원',\n      address: '도미니카공화국',\n      src: 'https://goo.gl/Ksk9B9'\n    }, {\n      userId: 'lego123',\n      password: '789',\n      name: 'Lego',\n      address: 'Busan',\n      src: 'https://goo.gl/x7SpCD'\n    }]\n  },\n  getters: {\n    allUsersCount: function allUsersCount(state) {\n      return state.allUsers.length;\n    },\n    countOfSeoul: function countOfSeoul(state) {\n      var count = 0;\n      state.allUsers.forEach(function (user) {\n        if (user.address === 'Seoul') count++;\n      });\n      return count;\n    },\n    percentOfSeoul: function percentOfSeoul(state, getters) {\n      return Math.round(getters.countOfSeoul / getters.allUsersCount * 100);\n    }\n  },\n  mutations: {\n    addUsers: function addUsers(state, payload) {\n      state.allUsers.push(payload);\n    }\n  },\n  actions: {\n    addUsers: function addUsers(_ref, payload) {\n      var commit = _ref.commit;\n      // = function({commit})\n      //원래는 context 인데 간편화 하기 위해 { commit }\n      commit('addUsers', payload);\n    }\n  }\n});",{"version":3,"sources":["C:/Users/jungk/Desktop/vuex-project-for-share (1)/src/store.js"],"names":["Vue","Vuex","use","Store","state","allUsers","userId","password","name","address","src","getters","allUsersCount","length","countOfSeoul","count","forEach","user","percentOfSeoul","Math","round","mutations","addUsers","payload","push","actions","commit"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CACA;;AACAD,GAAG,CAACE,GAAJ,CAAQD,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACE,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAE;AAAC;AACNC,IAAAA,QAAQ,EAAE,CACR;AAACC,MAAAA,MAAM,EAAE,SAAT;AAAoBC,MAAAA,QAAQ,EAAE,KAA9B;AAAqCC,MAAAA,IAAI,EAAE,IAA3C;AAAiDC,MAAAA,OAAO,EAAE,OAA1D;AAAmEC,MAAAA,GAAG,EAAC;AAAvE,KADQ,EAER;AAACJ,MAAAA,MAAM,EAAE,QAAT;AAAmBC,MAAAA,QAAQ,EAAE,KAA7B;AAAoCC,MAAAA,IAAI,EAAE,KAA1C;AAAiDC,MAAAA,OAAO,EAAE,SAA1D;AAAqEC,MAAAA,GAAG,EAAC;AAAzE,KAFQ,EAGR;AAACJ,MAAAA,MAAM,EAAE,SAAT;AAAoBC,MAAAA,QAAQ,EAAE,KAA9B;AAAqCC,MAAAA,IAAI,EAAE,MAA3C;AAAmDC,MAAAA,OAAO,EAAE,OAA5D;AAAqEC,MAAAA,GAAG,EAAC;AAAzE,KAHQ;AADL,GADqB;AAQ9BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,aAAa,EAAE,uBAASR,KAAT,EAAgB;AAC7B,aAAOA,KAAK,CAACC,QAAN,CAAeQ,MAAtB;AACD,KAHM;AAIPC,IAAAA,YAAY,EAAE,sBAAAV,KAAK,EAAI;AACrB,UAAIW,KAAK,GAAG,CAAZ;AACAX,MAAAA,KAAK,CAACC,QAAN,CAAeW,OAAf,CAAuB,UAAAC,IAAI,EAAI;AAC7B,YAAGA,IAAI,CAACR,OAAL,KAAiB,OAApB,EAA6BM,KAAK;AACnC,OAFD;AAGA,aAAOA,KAAP;AACD,KAVM;AAYPG,IAAAA,cAAc,EAAE,wBAACd,KAAD,EAAQO,OAAR,EAAoB;AAClC,aAAOQ,IAAI,CAACC,KAAL,CAAWT,OAAO,CAACG,YAAR,GAAuBH,OAAO,CAACC,aAA/B,GAA8C,GAAzD,CAAP;AACD;AAdM,GARqB;AAyB5BS,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE,kBAAClB,KAAD,EAAQmB,OAAR,EAAoB;AAC5BnB,MAAAA,KAAK,CAACC,QAAN,CAAemB,IAAf,CAAoBD,OAApB;AACD;AAHQ,GAzBiB;AA8B5BE,EAAAA,OAAO,EAAE;AACPH,IAAAA,QAAQ,EAAE,wBAAaC,OAAb,EAAyB;AAAA,UAAtBG,MAAsB,QAAtBA,MAAsB;AAAE;AACnC;AACFA,MAAAA,MAAM,CAAC,UAAD,EAAaH,OAAb,CAAN;AACC;AAJM;AA9BmB,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n// vuex 크레에이트시 기본으로 있는 파일\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {// data의 역할\n    allUsers: [\n      {userId: 'hoza123', password: '123', name: '연희', address: 'Seoul', src:'https://goo.gl/oqLfJR'},\n      {userId: 'max123', password: '456', name: '이기원', address: '도미니카공화국', src:'https://goo.gl/Ksk9B9'},\n      {userId: 'lego123', password: '789', name: 'Lego', address: 'Busan', src:'https://goo.gl/x7SpCD'}\n    ]\n  },\ngetters: {\n  allUsersCount: function(state) {\n    return state.allUsers.length\n  },\n  countOfSeoul: state => {\n    let count = 0\n    state.allUsers.forEach(user => {\n      if(user.address === 'Seoul') count++\n    })\n    return count\n  },\n\n  percentOfSeoul: (state, getters) => {\n    return Math.round(getters.countOfSeoul / getters.allUsersCount *100)\n  }\n},\n\n  mutations: {\n    addUsers: (state, payload) => {\n      state.allUsers.push(payload)\n    }\n  },\n  actions: {\n    addUsers: ({ commit }, payload) => { // = function({commit})\n      //원래는 context 인데 간편화 하기 위해 { commit }\n    commit('addUsers', payload)\n    }\n\n  }\n})\n"]}]}